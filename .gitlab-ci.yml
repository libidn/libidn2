# Copyright (C) 2016-2025 Simon Josefsson

# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

variables:
  GIT_DEPTH: 250
  GNULIB_URL: https://gitlab.com/libidn/gnulib-mirror.git

stages:
 - build # B-* jobs build from git for "make dist"
 - repro # R-* jobs do "make release" from git, S-* jobs build from *-src.tar.gz
 - test # tarball test builds

default:
  interruptible: true
  artifacts:
    expire_in: 2 weeks
    when: always
    paths:
    - "*.tar.gz"
    - ./**/*.log
    - ./*.log
    - ./config.h
    - ./out/$CI_JOB_NAME_SLUG/**

.gnulib-fetch:
  script:
  - GNULIB_REVISION=$(. bootstrap.conf >&2; echo $GNULIB_REVISION)
  - wget -nv https://gitlab.com/libidn/gnulib-mirror/-/archive/$GNULIB_REVISION/gnulib-mirror-$GNULIB_REVISION.tar.gz
  - gzip -cd gnulib-mirror-$GNULIB_REVISION.tar.gz | tar xf -
  - rm -fv gnulib-mirror-$GNULIB_REVISION.tar.gz
  - export GNULIB_SRCDIR=$PWD/gnulib-mirror-$GNULIB_REVISION

.save-artifacts:
  script:
  - (! command -v git > /dev/null) || git status
  - (! command -v git > /dev/null) || git diff --exit-code # nothing should change version controlled files
  - sha256sum *.tar.*
  - mkdir -pv out/$CI_JOB_NAME_SLUG/{src,log}
  - find config.h *.log tests/*.log -exec mv -v {} out/$CI_JOB_NAME_SLUG/log \;
  - mv -v *-src.tar.* out/$CI_JOB_NAME_SLUG/src/ || true
  - mv -v *.tar.* out/$CI_JOB_NAME_SLUG/

B-Guix:
  image: registry.gitlab.com/debdistutils/guix/container:extra
  stage: build
  before_script:
  - cp -rL /gnu/store/*profile/etc/* /etc/
  - echo 'root:x:0:0:root:/:/bin/sh' > /etc/passwd
  - echo 'root:x:0:' > /etc/group
  - export HOME=/
  - guix describe
  - echo time guix install --verbosity=0 wget python patch perl gperf gengetopt libtool gettext help2man texinfo libabigail indent pkg-config gtk-doc
  script:
  - !reference [.gnulib-fetch, script]
  - time ./bootstrap --no-git
  - time ./configure --enable-gcc-warnings=error
  - time make -j$(nproc) syntax-check
  - time make -j$(nproc) check V=1 VERBOSE=t
  - time make V=1 dist
  - !reference [.save-artifacts, script]

B-gcc:
  image: gcc:latest
  stage: build
  before_script:
  - gcc --version
  - apt-get update -q
  - apt-get install -y -q --no-install-recommends git make autoconf automake libtool gettext autopoint gperf libunistring-dev gengetopt help2man texinfo gtk-doc-tools
  script:
  - time ./bootstrap --skip-po
  - time ./configure --enable-gcc-warnings=error CC="gcc -std=gnu2x" --disable-doc
  - time make -k syntax-check
  - time make V=1 VERBOSE=t check clean
  - time ./configure --enable-gcc-warnings CC="gcc -std=c23"
  - time make V=1 all check dist
  - !reference [.save-artifacts, script]

B-clang:
  image: silkeh/clang:latest
  stage: build
  before_script:
  - clang --version
  - apt-get update -q
  - apt-get install -y -q --no-install-recommends git make autoconf automake libtool gettext autopoint gperf libunistring-dev gengetopt help2man texinfo gtk-doc-tools abi-compliance-checker abigail-tools
  script:
  - time ./bootstrap --skip-po
  - time ./configure --enable-gcc-warnings=error CC="clang -std=gnu2x" --disable-doc
  - time make -k syntax-check
  - time make V=1 VERBOSE=t check clean
  - time ./configure --enable-gcc-warnings=error CC="clang -std=c23"
  - time make V=1 VERBOSE=t check dist
  - !reference [.save-artifacts, script]

B-Alpine-arm64:
  image: alpine:latest
  tags: [ saas-linux-small-arm64 ]
  stage: build
  before_script:
  - time apk update
  - time apk add gcc python3 make libc-dev git autoconf automake libtool gettext-dev gperf gengetopt patch
  script:
  - time ./bootstrap --skip-po
  - time ./configure --disable-doc --enable-gcc-warnings=error
  - time make -j$(nproc) syntax-check
  - time make -j$(nproc) -k V=1
  - time make -j$(nproc) check V=1 VERBOSE=t
  - git diff --exit-code # nothing should change version controlled files

.almarocky: &almarocky
  stage: build
  tags: [ saas-linux-medium-amd64 ]
  variables:
    PKGS: wget git make diffutils patch autoconf automake libtool gettext-devel gperf libunistring-devel valgrind gengetopt help2man gtk-doc texinfo texinfo-tex libabigail
  before_script:
  - cat /etc/os-release
  - time dnf install -y epel-release
  - time dnf --enablerepo=$(dnf repolist --all | grep crb > /dev/null && echo crb || echo powertools) install -y ${PKGS}
  - cc --version
  script:
  - !reference [.gnulib-fetch, script]
  - time ./bootstrap --skip-po --no-git
  - time ./configure --enable-gcc-warnings=error
  - time make syntax-check
  - time make -j$(nproc) V=1 VERBOSE=t check
  - time make abi-check
  - time make -j$(nproc) V=1 VERBOSE=t distcheck
  - !reference [.save-artifacts, script]

B-AlmaLinux8:
  image: almalinux:8
  extends: .almarocky

B-RockyLinux8:
  image: rockylinux:8
  extends: .almarocky

B-AlmaLinux9:
  image: almalinux:9
  extends: .almarocky

B-RockyLinux9:
  image: rockylinux:9
  extends: .almarocky

.pureosdebian: &pureosdebian
  tags: [ saas-linux-medium-amd64 ]
  stage: build
  variables:
    DEBIAN_FRONTEND: noninteractive
  before_script:
  - cat /etc/os-release
  - time apt-get update -q
  - time apt-get install -y -q eatmydata
  - time eatmydata apt-get install -y -q wget make gcc git autoconf automake libtool gettext autopoint gperf libunistring-dev valgrind gengetopt help2man texinfo gtk-doc-tools abi-compliance-checker abigail-tools
  script:
  - !reference [.gnulib-fetch, script]
  - time ./bootstrap --skip-po --no-git
  - time ./configure --enable-gcc-warnings=error --enable-valgrind-tests
  - time make syntax-check
  - time make -j$(nproc) V=1 VERBOSE=t check
  - make -C doc compare-makefile
  - make abi-check
  - time make -j$(nproc) V=1 VERBOSE=t distcheck AM_DISTCHECK_DVI_TARGET=
  - !reference [.save-artifacts, script]

B-PureOS10:
  image: pureos/byzantium:latest
  extends: .pureosdebian

B-Debian11:
  image: debian:11-slim
  extends: .pureosdebian

B-Devuan5:
  image: devuan/devuan:daedalus
  extends: .pureosdebian

B-Debian12:
  image: debian:12-slim
  extends: .pureosdebian

.trisquelubuntu: &trisquelubuntu
  tags: [ saas-linux-medium-amd64 ]
  stage: build
  variables:
    DEBIAN_FRONTEND: noninteractive
  before_script:
  - cat /etc/os-release
  - sed -i 's,http://archive.trisquel.info/trisquel,http://ftp.acc.umu.se/mirror/trisquel/packages,' /etc/apt/sources.list
  - time apt-get update -q
  - time apt-get install -y -q eatmydata
  - time eatmydata apt-get install -y -q wget make gcc git autoconf automake libtool gettext autopoint gperf libunistring-dev valgrind gengetopt help2man texinfo gtk-doc-tools abi-compliance-checker abigail-tools
  script:
  - !reference [.gnulib-fetch, script]
  - time ./bootstrap --skip-po --no-git
  - time ./configure --enable-gcc-warnings=error --enable-valgrind-tests
  - time make syntax-check
  - time make -j$(nproc) V=1 VERBOSE=t check
  - make -C doc compare-makefile
  - time make -j$(nproc) V=1 VERBOSE=t distcheck AM_DISTCHECK_DVI_TARGET=
  - env IDN2=src/idn2 STANDALONE_CFLAGS="-Ilib -Itests lib/.libs/libidn2.a unistring/.libs/libunistring.a gl/.libs/libgnu.a -lunistring" tests/standalone.sh
  - env IDN2=src/idn2 STANDALONE_CFLAGS="-Ilib -Itests -Wl,-rpath lib/.libs lib/.libs/libidn2.so unistring/.libs/libunistring.a gl/.libs/libgnu.a -lunistring" tests/standalone.sh
  - make abi-check
  - make dist
  - !reference [.save-artifacts, script]

B-Ubuntu2204:
  image: ubuntu:22.04
  extends: .trisquelubuntu

B-Trisquel11:
  rules:
  - when: always # this job is used by merge request jobs tagged with 'needs' on this job
  image: kpengboy/trisquel:11.0
  extends: .trisquelubuntu

Q-Debian-testing:
  image: debian:testing-slim
  tags: [ saas-linux-medium-amd64 ]
  stage: build
  before_script:
  - cat /etc/os-release
  - apt-get update -q
  - time apt-get install -y -q eatmydata
  - time eatmydata apt-get install -y -q wget make gcc git autoconf automake libtool autopoint gperf libunistring-dev gengetopt indent
  script:
  - apt-get install -y idn2 libidn2-dev libunistring-dev | tail
  - cp -a tests/test-lookup.c tests/test-lookup.c~
  - sed -i -e 's/"xn--pkf", IDN2_DISALLOWED/"xn--pkf", IDN2_OK/' tests/test-lookup.c
  - env STANDALONE_DISABLE='*punycode* *test-IdnaTest-inc*' tests/standalone.sh
  - mv tests/test-lookup.c~ tests/test-lookup.c
  - apt-get remove -y --purge libidn2-dev libunistring-dev | tail
  - !reference [.gnulib-fetch, script]
  - time ./bootstrap --no-git --skip-po
  - git diff --exit-code # catch changes resulting in *-dirty version number
  - mkdir -p q
  - cd q
  - time ../configure CFLAGS=-O0 --enable-gcc-warnings=error --disable-doc --with-included-libunistring
  - grep am_cv_func_iconv_summary config.log
  - time make -j$(nproc) -k syntax-check
  - time make -j$(nproc) -k V=1 check VERBOSE=t
  - env IDN2=src/idn2 STANDALONE_CFLAGS="-DHAVE_CONFIG_H -I. -Ilib -I../lib -Itests -Iunistring -I../unistring lib/.libs/libidn2.a unistring/.libs/libunistring.a gl/.libs/libgnu.a" ../tests/standalone.sh
  - env IDN2=src/idn2 STANDALONE_CFLAGS="-DHAVE_CONFIG_H -I. -Ilib -I../lib -Itests -Iunistring -I../unistring -Wl,-rpath lib/.libs lib/.libs/libidn2.so unistring/.libs/libunistring.a gl/.libs/libgnu.a" ../tests/standalone.sh
  - git diff --exit-code # nothing should change version controlled files

B-Debian-testing:
  image: debian:testing
  stage: build
  before_script:
  - apt-get update -q -y
  - apt-get install -q -y make gcc git autoconf automake libtool gettext autopoint gperf libunistring-dev valgrind gengetopt help2man texinfo texlive gtk-doc-tools abi-compliance-checker abigail-tools libidn2-dev idn2
  script:
  - cp -a tests/test-lookup.c tests/test-lookup.c~
  - sed -i -e 's/"xn--pkf", IDN2_DISALLOWED/"xn--pkf", IDN2_OK/' tests/test-lookup.c
  - env STANDALONE_DISABLE='*punycode* *test-IdnaTest-inc*' tests/standalone.sh
  - mv tests/test-lookup.c~ tests/test-lookup.c
  - apt-get remove -y --purge libidn2-dev idn2
  - ./bootstrap --skip-po
  - ./configure --enable-gcc-warnings=error --enable-valgrind-tests
  - time make -j$(nproc) V=1
  - time make -j$(nproc) -k check VERBOSE=t
  - git diff --exit-code # nothing should change version controlled files
  - rm unistring/libunistring.la # FIXME XXX debug why this is needed...
  - time make -j$(nproc) distcheck
  - env IDN2=src/idn2 STANDALONE_CFLAGS="-Ilib lib/.libs/libidn2.a unistring/.libs/libunistring.a gl/.libs/libgnu.a -lunistring" tests/standalone.sh
  - env IDN2=src/idn2 STANDALONE_CFLAGS="-Ilib -Wl,-rpath lib/.libs lib/.libs/libidn2.so unistring/.libs/libunistring.a gl/.libs/libgnu.a -lunistring" tests/standalone.sh
  - make install
  - apt-get install -y -q man
  - git clone --depth=1 https://salsa.debian.org/debian/libidn2.git debian-libidn2
  - for c in debian-libidn2/debian/tests/*; do if test -x $c; then $c; echo rc $c is $?; fi; done

B-armcross:
  image: $CI_REGISTRY/libidn/build-images:libidn2-Debian12
  stage: build
  before_script:
  - apt-get update -q -y
  - apt-get install -y -q gcc-arm-linux-gnueabi qemu-user qemu-user-binfmt file binfmt-support
  - update-binfmts --enable qemu-arm
  script:
  - ./bootstrap --skip-po
  - ./configure --enable-gcc-warnings=error --disable-doc
  - make -j$(nproc) -k V=1
  - ./configure --enable-gcc-warnings=error --disable-doc --host=arm-linux-gnueabi CFLAGS="-static --static"
  - make -j$(nproc) -k V=1
  - file src/idn2
  - LANG=C.UTF-8 qemu-arm src/idn2 --debug foo
  - LANG=C.UTF-8 src/idn2 --debug räksmörgås
  - LANG=C.UTF-8 make -j$(nproc) -k check VERBOSE=t

B-Fedora41:
  stage: build
  image: fedora:41
  before_script:
  - time dnf install -y wget make gcc git autoconf automake libtool gettext-devel glibc-gconv-extra patch gperf libunistring-devel valgrind gengetopt help2man texinfo texinfo-tex texlive gtk-doc dblatex libabigail
  script:
  - !reference [.gnulib-fetch, script]
  - time ./bootstrap --no-git
  - time ./configure --enable-gcc-warnings=error
  - time make -j$(nproc) syntax-check
  - time make -j$(nproc) check
  - time make -j$(nproc) distcheck V=1 VERBOSE=t
  - !reference [.save-artifacts, script]

# https://releases.llvm.org/13.0.0/tools/clang/docs/AddressSanitizer.html
# https://releases.llvm.org/13.0.0/tools/clang/docs/UndefinedBehaviorSanitizer.html
# https://lists.gnu.org/archive/html/bug-gnulib/2022-03/msg00016.html
B-Fedora39-ASAN/UBSan:
  stage: build
  image: fedora:39
  before_script:
  - dnf install -y wget make
  - dnf install -y git autoconf automake libtool gettext-devel patch gperf
  - dnf install -y libunistring-devel valgrind gengetopt help2man
  - dnf install -y texinfo gtk-doc
  - dnf install -y libabigail
  - dnf install -y glibc-gconv-extra clang
  script:
  - !reference [.gnulib-fetch, script]
  - time ./bootstrap --skip-po --no-git
  - export CC=clang
  - export CFLAGS="-fsanitize=address -g -O0"
  - ASAN_OPTIONS=detect_leaks=0 ./configure --disable-doc --disable-gcc-warnings
  - ASAN_OPTIONS=detect_leaks=0 make V=1 -j$(nproc) check VERBOSE=t
  - make clean
  - export CFLAGS="-fsanitize=undefined,integer -fno-sanitize-recover=undefined,integer -g -O0"
  - ./configure --disable-doc --disable-gcc-warnings
  - make V=1 -C unistring
  - make V=1 -C gl
  - make V=1 -C lib CFLAGS="$CFLAGS -Wall -Wextra -Werror"
  - make V=1 -C examples CFLAGS="$CFLAGS -Wall -Wextra -Werror -Wno-unused-parameter"
  - make V=1 -j$(nproc) check VERBOSE=t

B-Fedora39-clang-analyzer:
  stage: build
  image: fedora:39
  before_script:
  - dnf install -y wget make gcc
  - dnf install -y git autoconf automake libtool gettext-devel patch gperf
  - dnf install -y libunistring-devel valgrind gengetopt help2man
  - dnf install -y texinfo texinfo-tex texlive gtk-doc dblatex
  - dnf install -y libabigail
  - dnf install -y glibc-gconv-extra clang-analyzer
  script:
  - !reference [.gnulib-fetch, script]
  - time ./bootstrap --skip-po --no-git
  - scan-build ./configure --enable-gtk-doc --enable-gtk-doc-pdf
  - make -j$(nproc) -C unistring
  - make -j$(nproc) -C gl
  - scan-build -o clang-analyzer make -j$(nproc) -C lib
  - make
  - make web-manual
  - make dist
  artifacts:
    when: on_success
    paths:
    - doc/reference
    - doc/manual
    - clang-analyzer

sast:
  stage: build
  # SAST customization: https://docs.gitlab.com/ee/user/application_security/sast/#customizing-the-sast-settings
  variables:
    SAST_EXCLUDED_PATHS: examples, fuzz, tests, lib/gendata.c, lib/gentr46map.c
include:
- template: Security/SAST.gitlab-ci.yml

# https://www.synopsys.com/blogs/software-security/integrating-coverity-scan-with-gitlab-ci/
Coverity:
  rules:
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    when: never
  - if: $CI_COMMIT_REF_PROTECTED == "true"
  - if: $LIBIDN2_CI_RUN_COVERITY_JOBS
  image: $CI_REGISTRY/libidn/build-images:libidn2-mini-Debian-testing
  stage: build
  allow_failure: true
  before_script:
  - apt-get update -q -y
  - apt-get install -y -q curl
  script:
  - test -n "$COVERITY_SCAN_TOKEN" && test -n "$COVERITY_SCAN_PROJECT_NAME"
  - curl -o /tmp/cov-analysis-linux64.tgz https://scan.coverity.com/download/linux64
    --form project=$COVERITY_SCAN_PROJECT_NAME --form token=$COVERITY_SCAN_TOKEN
  - sha1sum /tmp/cov-analysis-linux64.tgz
  - tar xfz /tmp/cov-analysis-linux64.tgz
  - time ./bootstrap --skip-po
  - time ./configure --enable-gcc-warnings=error --disable-doc CFLAGS="-g -Og"
  - cov-analysis-linux64-*/bin/cov-build --dir cov-int make check -j$(nproc)
  - tar cfz cov-int.tar.gz cov-int
  - curl https://scan.coverity.com/builds?project=$COVERITY_SCAN_PROJECT_NAME
    --form token=$COVERITY_SCAN_TOKEN --form email=$GITLAB_USER_EMAIL
    --form file=@cov-int.tar.gz --form version="`git describe --tags`"
    --form description="`git describe --tags` / $CI_COMMIT_TITLE / $CI_COMMIT_REF_NAME:$CI_PIPELINE_ID"
  artifacts:
    expire_in: 1 week
    paths:
      - cov-int/*.txt

# https://docs.gitlab.com/ci/runners/hosted_runners/macos/
B-macOS14Xcode15:
  rules:
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  - if: $LIBIDN2_CI_RUN_MACOS_JOBS
  stage: build
  image: macos-14-xcode-15
  tags: [ saas-macos-medium-m1 ]
  variables:
    HOMEBREW_NO_AUTO_UPDATE: 1
    HOMEBREW_NO_INSTALL_UPGRADE: 1
    HOMEBREW_NO_INSTALL_CLEANUP: 1
    HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
    WERROR_CFLAGS: "-Wno-error=format-nonliteral"
  before_script:
  - brew install autoconf automake libtool gengetopt help2man texinfo coreutils
  script:
  - !reference [.gnulib-fetch, script]
  - PATH="$HOMEBREW_PREFIX/opt/coreutils/libexec/gnubin:$PATH"; export PATH
  - time ./bootstrap --no-git --skip-po
  - time ./configure --enable-gcc-warnings=error
  - make syntax-check
  - time make -j$(nproc) check -k V=1 VERBOSE=t
  - time make V=1 dist
  - !reference [.save-artifacts, script]

B-macOS15Xcode16:
  rules:
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  - if: $LIBIDN2_CI_RUN_MACOS_JOBS
  stage: build
  image: macos-15-xcode-16
  tags: [ saas-macos-large-m2pro ]
  variables:
    HOMEBREW_NO_AUTO_UPDATE: 1
    HOMEBREW_NO_INSTALL_UPGRADE: 1
    HOMEBREW_NO_INSTALL_CLEANUP: 1
    HOMEBREW_NO_INSTALLED_DEPENDENTS_CHECK: 1
    WERROR_CFLAGS: "-Wno-error=format-nonliteral"
  before_script:
  - brew install autoconf automake libtool gengetopt help2man texinfo coreutils
  script:
  - !reference [.gnulib-fetch, script]
  - PATH="$HOMEBREW_PREFIX/opt/coreutils/libexec/gnubin:$PATH"; export PATH
  - time ./bootstrap --no-git --skip-po
  - time ./configure --enable-gcc-warnings=error
  - make syntax-check
  - time make -j$(nproc) check -k V=1 VERBOSE=t
  - time make V=1 dist
  - !reference [.save-artifacts, script]

macOS13Xcode14:
  rules:
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  - if: $LIBIDN2_CI_RUN_MACOS_JOBS
  image: macos-13-xcode-14
  tags: [ saas-macos-medium-m1 ]
  stage: test
  needs: [B-Trisquel11]
  variables:
    WERROR_CFLAGS: "-Wno-error=format-nonliteral"
  script:
  - tar xfz out/b-trisquel11/*-*.tar.gz
  - cd $(tar tfz out/b-trisquel11/*-*.tar.gz | head -n1)
  - ./configure --enable-gcc-warnings=error WERROR_CFLAGS="-Wno-error=unused-value -Wno-error=format-nonliteral -Wno-error=attributes -Wno-error=char-subscripts"
  - make syntax-check
  - time make -j$(nproc) check V=1 VERBOSE=t

OpenBSD:
  rules:
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  - if: $LIBIDN2_CI_RUN_OPENBSD_JOBS
  tags: [ openbsd ]
  needs: [B-Trisquel11]
  stage: test
  before_script:
  - uname -a
  - sysctl hw
  script:
  - gzip -cd out/b-trisquel11/*-*.tar.gz | tar xf -
  - cd $(gzip -cd out/b-trisquel11/*-*.tar.gz | tar tf - | head -n1)
  - time ./configure --enable-gcc-warnings
  - time make check V=1 VERBOSE=t

B-MinGW64:
  stage: build
  image: $CI_REGISTRY/libidn/build-images:libidn2-Fedora29-MinGW64
  before_script:
  - mount -t binfmt_misc binfmt_misc /proc/sys/fs/binfmt_misc
  - echo ':DOSWin:M::MZ::/usr/bin/wine64:' > /proc/sys/fs/binfmt_misc/register
  script:
  - ./bootstrap --skip-po
  - mingw64-configure --disable-valgrind-tests --disable-doc
  - mingw64-make -j$(nproc)
  - mingw64-make -j$(nproc) check VERBOSE=t

# https://docs.gitlab.com/ee/ci/runners/saas/windows_saas_runner.html
B-Windows-UCRT64:
  rules:
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  - if: $LIBIDN2_CI_RUN_WINDOWS_JOBS
  tags: [ saas-windows-medium-amd64 ]
  stage: build
  variables:
    WERROR_CFLAGS: "-Wno-error=format-nonliteral -Wno-error=unused-value"
  script: # https://www.msys2.org/docs/ci/#other-systems
  - wget.exe -nv -O msys2.exe https://github.com/msys2/msys2-installer/releases/download/nightly-x86_64/msys2-base-x86_64-latest.sfx.exe
  - ./msys2.exe -y -oC:\
  - Remove-Item msys2.exe
  - $env:CHERE_INVOKING = 'yes'
  - $env:MSYSTEM = 'UCRT64' # https://www.msys2.org/docs/environments/
  - C:\msys64\usr\bin\bash -lc ' '
  - C:\msys64\usr\bin\bash -lc 'pacman --noconfirm -Syuu'
  - C:\msys64\usr\bin\bash -lc 'pacman --noconfirm -Syuu'
  - |
    C:\msys64\usr\bin\bash -lcx '
    time pacman --noconfirm -Syu git autoconf automake libtool make mingw-w64-ucrt-x86_64-gcc python help2man gengetopt gperf patch gettext-devel texinfo
    # https://docs.github.com/en/get-started/getting-started-with-git/configuring-git-to-handle-line-endings
    file configure.ac
    git config --global core.autocrlf false
    git config --global core.eol lf
    git rm -rf --cached . | tail
    git reset --hard HEAD
    file configure.ac
    time ./bootstrap --skip-po
    time ./configure --enable-gcc-warnings=error
    time make -j$(nproc) V=1 -k check VERBOSE=t'
  - C:\msys64\usr\bin\bash -lc 'grep ^PASS tests/test-register.log'

0-compare:
  image: alpine:latest
  stage: repro
  needs: [ B-AlmaLinux8, B-AlmaLinux9, B-RockyLinux8, B-RockyLinux9, B-Trisquel11, B-Ubuntu2204, B-PureOS10, B-Debian11, B-Devuan5, B-Debian12, B-gcc, B-clang, B-Guix, R-Guix, R-Debian12, R-Ubuntu2404, S-Trisquel10, S-Ubuntu2004 ]
  script:
  - cd out
  - sha256sum */*.tar.* */*/*.tar.* | sort | grep    -- -src.tar.
  - sha256sum */*.tar.* */*/*.tar.* | sort | grep -v -- -src.tar.
  - sha256sum */*.tar.* */*/*.tar.* | sort | uniq -c -w64 | sort -rn
  - sha256sum */*.tar.* */*/*.tar.* | grep    -- -src.tar. | sort | uniq -c -w64 | grep -v '^      1 '
  - sha256sum */*.tar.* */*/*.tar.* | grep -v -- -src.tar. | sort | uniq -c -w64 | grep -v '^      1 '
# Confirm modern git-archive tarball reproducibility
  - cmp b-almalinux8/src/*.tar.gz b-almalinux9/src/*.tar.gz
  - cmp b-almalinux8/src/*.tar.gz b-rockylinux8/src/*.tar.gz
  - cmp b-almalinux8/src/*.tar.gz b-rockylinux9/src/*.tar.gz
  - cmp b-almalinux8/src/*.tar.gz b-debian12/src/*.tar.gz
  - cmp b-almalinux8/src/*.tar.gz b-devuan5/src/*.tar.gz
  - cmp b-almalinux8/src/*.tar.gz r-guix/src/*.tar.gz
  - cmp b-almalinux8/src/*.tar.gz r-debian12/src/*.tar.gz
  - cmp b-almalinux8/src/*.tar.gz r-ubuntu2404/src/*v2.*.tar.gz
# Confirm old git-archive (export-subst but long git describe) tarball reproducibility
  - cmp b-trisquel11/src/*.tar.gz b-ubuntu2204/src/*.tar.gz
# Confirm really old git-archive (no export-subst) tarball reproducibility
  - cmp b-debian11/src/*.tar.gz b-pureos10/src/*.tar.gz
# Confirm 'make dist' generated tarball reproducibility
  - cmp b-almalinux8/*.tar.gz b-rockylinux8/*.tar.gz
  - cmp b-almalinux9/*.tar.gz b-rockylinux9/*.tar.gz
  - cmp b-pureos10/*.tar.gz b-debian11/*.tar.gz
  - cmp b-devuan5/*.tar.gz b-debian12/*.tar.gz
  - cmp b-trisquel11/*.tar.gz b-ubuntu2204/*.tar.gz
  - cmp b-guix/*.tar.gz r-guix/*.tar.gz
# Confirm 'make dist' from git-archive tarball reproducibility
  - cmp s-trisquel10/*.tar.gz s-ubuntu2004/*.tar.gz
  artifacts:
    expire_in: 2 weeks
    when: always
    paths:
    - ./out/**

R-Guix:
  tags: [ saas-linux-medium-amd64 ]
  image: registry.gitlab.com/debdistutils/guix/container:extra
  stage: repro
  needs: []
  before_script:
  - cp -rL /gnu/store/*profile/etc/* /etc/
  - echo 'root:x:0:0:root:/:/bin/sh' > /etc/passwd
  - echo 'root:x:0:' > /etc/group
  - export HOME=/
  - guix describe
  script:
  - !reference [.gnulib-fetch, script]
  - time ./bootstrap --no-git
  - time ./configure
  - time make V=1 syntax-check
  - time make -j$(nproc) check V=1 VERBOSE=t
  - time make -j$(nproc) dist V=1 VERBOSE=t
  - git status
  - git diff --exit-code
  - gpg --batch --passphrase '' --quick-gen-key pipeline@example.org
  - git checkout -B cibranch
  - git config user.email "pipeline@example.org"
  - git config user.name "Pipeline Builder"
  - git config user.signingkey pipeline@example.org
  - |
    if test -z "$CI_COMMIT_TAG"; then
      sed -i '3i * Noteworthy changes in release ?.? (????-??-??) [?]\n\n** WARNING This release was prepared automatically with no testing.\n' NEWS
      git commit -m "Warn about automatic release." NEWS
      relver='23.42.17'
      reltyp='alpha'
    else # maintainer ran release-commit
      relver=$(cat NEWS | sed -n -e 's/.*release \([0-9.]\+\) (....-..-..) \[\(.*\)\].*/\1/p' | head -1)
      reltyp=$(cat NEWS | sed -n -e 's/.*release \([0-9.]\+\) (....-..-..) \[\(.*\)\].*/\2/p' | head -1)
    fi
  - test -n "$CI_COMMIT_TAG" || make release-commit RELEASE="$relver $reltyp"
  - make release RELEASE="$relver $reltyp" V=1 VERBOSE=t AM_DISTCHECK_DVI_TARGET=
  - cat -n ~/announce-*
  - git diff --exit-code # nothing should change version controlled files
  - sha256sum *.tar.*
  - mkdir -pv out/$CI_JOB_NAME_SLUG/{src,rel,log}
  - find config.h *.log tests/*.log -exec mv -v {} out/$CI_JOB_NAME_SLUG/log \;
  - test -n "$CI_COMMIT_TAG" || mv -v *23.42.17* out/$CI_JOB_NAME_SLUG/rel/
  - mv -v *-src.tar.* out/$CI_JOB_NAME_SLUG/src/
  - mv -v *.tar.* ~/announce-* out/$CI_JOB_NAME_SLUG/

R-Debian12:
  tags: [ saas-linux-medium-amd64 ]
  image: debian:12-slim
  stage: repro
  needs: []
  before_script:
  - cat /etc/os-release
  - time apt-get update -q
  - time apt-get install -y -q eatmydata
  - time eatmydata apt-get install -y -q wget make gcc git autoconf automake libtool gettext autopoint gperf libunistring-dev gengetopt help2man texinfo abi-compliance-checker abigail-tools gtk-doc-tools
  script:
  - !reference [.gnulib-fetch, script]
  - time ./bootstrap --skip-po --no-git
  - time ./configure --enable-gcc-warnings
  - time make syntax-check
  - time make -j$(nproc) check V=1 VERBOSE=t
  - time make -j$(nproc) dist
  - sha256sum *.tar.*
  - git status
  - git diff --exit-code
  - time apt-get install -y -q --no-install-recommends gpg gpgv2 gpg-agent
  - gpg --batch --passphrase '' --quick-gen-key pipeline@example.org
  - git checkout -B cibranch
  - git config user.email "pipeline@example.org"
  - git config user.name "Pipeline Builder"
  - git config user.signingkey pipeline@example.org
  - |
    if test -z "$CI_COMMIT_TAG"; then
      sed -i '3i * Noteworthy changes in release ?.? (????-??-??) [?]\n\n** WARNING This release was prepared automatically with no testing.\n' NEWS
      git commit -m "Warn about automatic release." NEWS
      relver='23.42.17'
      reltyp='alpha'
    else # maintainer ran release-commit
      relver=$(cat NEWS | sed -n -e 's/.*release \([0-9.]\+\) (....-..-..) \[\(.*\)\].*/\1/p' | head -1)
      reltyp=$(cat NEWS | sed -n -e 's/.*release \([0-9.]\+\) (....-..-..) \[\(.*\)\].*/\2/p' | head -1)
    fi
  - test -n "$CI_COMMIT_TAG" || make release-commit RELEASE="$relver $reltyp"
  - time make release RELEASE="$relver $reltyp" V=1 VERBOSE=t AM_DISTCHECK_DVI_TARGET=
  - cat -n ~/announce-*
  - git diff --exit-code # nothing should change version controlled files
  - sha256sum *.tar.*
  - mkdir -pv out/$CI_JOB_NAME_SLUG/{src,rel,log}
  - find config.h *.log tests/*.log -exec mv -v {} out/$CI_JOB_NAME_SLUG/log \;
  - test -n "$CI_COMMIT_TAG" || mv -v *23.42.17* out/$CI_JOB_NAME_SLUG/rel/
  - mv -v *-src.tar.* out/$CI_JOB_NAME_SLUG/src/
  - mv -v *.tar.* ~/announce-* out/$CI_JOB_NAME_SLUG/

R-Ubuntu2404:
  image: ubuntu:24.04
  tags: [ saas-linux-medium-amd64 ]
  stage: repro
  needs: []
  before_script:
  - cat /etc/os-release
  - time apt-get update -q
  - time apt-get install -y -q eatmydata
  - time eatmydata apt-get install -y -q wget make gcc git autoconf automake libtool gettext autopoint gperf libunistring-dev gengetopt indent help2man texinfo abi-compliance-checker abigail-tools gtk-doc-tools
  script:
  - !reference [.gnulib-fetch, script]
  - time ./bootstrap --skip-po --no-git
  - time ./configure --enable-gcc-warnings
  - time make -j$(nproc) syntax-check
  - time make -j$(nproc) check V=1 VERBOSE=t
  - time make -j$(nproc) dist
  - sha256sum *.tar.*
  - git status
  - git diff --exit-code # nothing should change version controlled files
  - apt-get install -y -q gpg gpgv
  - gpg --batch --passphrase '' --quick-gen-key pipeline@example.org
  - git checkout $CI_COMMIT_BRANCH
  - git config user.email "pipeline@example.org"
  - git config user.name "Pipeline Builder"
  - git config user.signingkey pipeline@example.org
  - |
    if test -z "$CI_COMMIT_TAG"; then
      sed -i '3i * Noteworthy changes in release ?.? (????-??-??) [?]\n\n** WARNING This release was prepared automatically with no testing.\n' NEWS
      git commit -m "Warn about automatic release." NEWS
      relver='23.42.17'
      reltyp='alpha'
    else # maintainer ran release-commit
      relver=$(cat NEWS | sed -n -e 's/.*release \([0-9.]\+\) (....-..-..) \[\(.*\)\].*/\1/p' | head -1)
      reltyp=$(cat NEWS | sed -n -e 's/.*release \([0-9.]\+\) (....-..-..) \[\(.*\)\].*/\2/p' | head -1)
    fi
  - test -n "$CI_COMMIT_TAG" || make release-commit RELEASE="$relver $reltyp"
  - make release RELEASE="$relver $reltyp" V=1 VERBOSE=t AM_DISTCHECK_DVI_TARGET=
  - cat -n ~/announce-*
  - git diff --exit-code # nothing should change version controlled files
  - sha256sum *.tar.*
  - mkdir -pv out/$CI_JOB_NAME_SLUG/{src,rel,log}
  - find config.h *.log tests/*.log -exec mv -v {} out/$CI_JOB_NAME_SLUG/log \;
  - test -n "$CI_COMMIT_TAG" || mv -v *23.42.17* out/$CI_JOB_NAME_SLUG/rel/
  - mv -v *-src.tar.* out/$CI_JOB_NAME_SLUG/src/
  - mv -v *.tar.* ~/announce-* out/$CI_JOB_NAME_SLUG/

S-Trisquel10:
  tags: [ saas-linux-medium-amd64 ]
  image: docker.io/kpengboy/trisquel:10.0
  stage: repro
  needs: [B-Trisquel11]
  before_script:
  - cat /etc/os-release
  - sed -i 's,http://archive.trisquel.info/trisquel,http://ftp.acc.umu.se/mirror/trisquel/packages,' /etc/apt/sources.list
  - time apt-get update -q
  - time apt-get install -y -q eatmydata
  - time eatmydata apt-get install -y -q wget make gcc git autoconf automake libtool autopoint gettext gperf libunistring-dev gengetopt help2man texinfo abi-compliance-checker abigail-tools
  script:
  - mkdir -pv ../b
  - cd ../b
  - tar xfz ../*/out/b-trisquel11/src/*-*.tar.gz
  - cd $(tar tfa ../*/out/b-trisquel11/src/*-*.tar.gz | head -n1)
  - !reference [.gnulib-fetch, script]
  - time ./bootstrap --no-git
  - time ./configure
  - grep '^VERSION = ' Makefile | grep -v UNKNOWN
  - time make -j$(nproc) check V=1 VERBOSE=t
  - src/idn2 --version | head -1 | grep -v UNKNOWN
  - time make -j$(nproc) dist AM_DISTCHECK_DVI_TARGET=
  - sha256sum *.tar.*
  - mkdir -pv $CI_PROJECT_DIR/out/$CI_JOB_NAME_SLUG/{src,log}
  - find config.h *.log tests/*.log -exec mv -v {} $CI_PROJECT_DIR/out/$CI_JOB_NAME_SLUG/log \;
  - mv -v *.tar.* $CI_PROJECT_DIR/out/$CI_JOB_NAME_SLUG/

S-Ubuntu2004:
  tags: [ saas-linux-medium-amd64 ]
  image: ubuntu:20.04
  stage: repro
  needs: [B-Trisquel11]
  variables:
    DEBIAN_FRONTEND: noninteractive
  before_script:
  - cat /etc/os-release
  - time apt-get update -q
  - time apt-get install -y -q eatmydata
  - time eatmydata apt-get install -y -q wget make gcc git autoconf automake libtool autopoint gettext gperf libunistring-dev gengetopt help2man texinfo abi-compliance-checker abigail-tools
  script:
  - tar xfz out/b-trisquel11/src/*-*.tar.gz
  - cd $(tar tfa out/b-trisquel11/src/*-*.tar.gz | head -n1)
  - !reference [.gnulib-fetch, script]
  - time ./bootstrap --no-git
  - time ./configure
  - grep '^VERSION = ' Makefile | grep -v UNKNOWN
  - time make -j$(nproc) check V=1 VERBOSE=t
  - src/idn2 --version | head -1 | grep -v UNKNOWN
  - time make -j$(nproc) dist AM_DISTCHECK_DVI_TARGET=
  - sha256sum *.tar.*
  - mkdir -pv ../out/$CI_JOB_NAME_SLUG/{src,log}
  - find config.h *.log tests/*.log -exec mv -v {} ../out/$CI_JOB_NAME_SLUG/log \;
  - mv -v *.tar.* ../out/$CI_JOB_NAME_SLUG/

Windows-MSYS:
  rules:
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  - if: $LIBIDN2_CI_RUN_WINDOWS_JOBS
  tags: [ saas-windows-medium-amd64 ]
  stage: test
  needs: [B-Trisquel11]
  variables:
    WERROR_CFLAGS: "-Wno-error=unused-value -Wno-error=format-nonliteral -Wno-error=attributes -Wno-error=char-subscripts"
  script: # https://www.msys2.org/docs/ci/#other-systems
  - wget.exe -nv -O msys2.exe https://github.com/msys2/msys2-installer/releases/download/nightly-x86_64/msys2-base-x86_64-latest.sfx.exe
  - ./msys2.exe -y -oC:\
  - Remove-Item msys2.exe
  - $env:CHERE_INVOKING = 'yes'
  - $env:MSYSTEM = 'MSYS' # https://www.msys2.org/docs/environments/
  - C:\msys64\usr\bin\bash -lc ' '
  - C:\msys64\usr\bin\bash -lc 'pacman --noconfirm -Syuu'
  - C:\msys64\usr\bin\bash -lc 'pacman --noconfirm -Syuu'
  - |
    C:\msys64\usr\bin\bash -lcx '
    time pacman --noconfirm -Syu make gcc libiconv-devel
    tar xfa out/b-trisquel11/*-*.tar.gz
    cd $(tar tfa out/b-trisquel11/*-*.tar.gz | head -n1)
    time ./configure --enable-gcc-warnings=error
    time make -j$(nproc) V=1 -k check VERBOSE=t'
  - C:\msys64\usr\bin\bash -lc 'grep ^PASS */tests/test-register.log'

Windows-MINGW64:
  rules:
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  - if: $LIBIDN2_CI_RUN_WINDOWS_JOBS
  tags: [ saas-windows-medium-amd64 ]
  stage: test
  needs: [B-Trisquel11]
  variables:
    WERROR_CFLAGS: "-Wno-error=format-nonliteral -Wno-error=unused-value"
  script: # https://www.msys2.org/docs/ci/#other-systems
  - wget.exe -nv -O msys2.exe https://github.com/msys2/msys2-installer/releases/download/nightly-x86_64/msys2-base-x86_64-latest.sfx.exe
  - ./msys2.exe -y -oC:\
  - Remove-Item msys2.exe
  - $env:CHERE_INVOKING = 'yes'
  - $env:MSYSTEM = 'MINGW64' # https://www.msys2.org/docs/environments/
  - C:\msys64\usr\bin\bash -lc ' '
  - C:\msys64\usr\bin\bash -lc 'pacman --noconfirm -Syuu'
  - C:\msys64\usr\bin\bash -lc 'pacman --noconfirm -Syuu'
  - |
    C:\msys64\usr\bin\bash -lcx '
    time pacman --noconfirm -Syu make mingw-w64-x86_64-gcc
    tar xfa out/b-trisquel11/*-*.tar.gz
    cd $(tar tfa out/b-trisquel11/*-*.tar.gz | head -n1)
    time ./configure --enable-gcc-warnings=error
    time make -j$(nproc) V=1 -k check VERBOSE=t'
  - C:\msys64\usr\bin\bash -lc 'grep ^PASS */tests/test-register.log'

Debian5:
  image: debian/eol:lenny
  stage: test
  needs: [B-Trisquel11]
  before_script:
  - apt-get update
  - apt-get install -y -q make gcc locales-all
  script:
  - tar xfz out/b-trisquel11/*-*.tar.gz
  - cd $(tar tfz out/b-trisquel11/*-*.tar.gz | head -n1)
  - ./configure --enable-gcc-warnings=error
  - make -j$(nproc) -k check V=1 VERBOSE=t

Debian9:
  image: debian:stretch
  stage: test
  needs: [B-Trisquel11]
  before_script:
  - sed -i 's/deb.debian.org/archive.debian.org/g' /etc/apt/sources.list
  - apt-get update || true
  - apt-get install -y -q make gcc
  script:
  - tar xfa out/b-trisquel11/*-*.tar.gz
  - cd $(tar tfa out/b-trisquel11/*-*.tar.gz | head -n1)
  - mkdir b
  - cd b
  - ../configure --enable-gcc-warnings=error
  - make -j$(nproc) -k check V=1 VERBOSE=t

Debian10:
  image: debian:buster
  stage: test
  needs: [B-Trisquel11]
  before_script:
  - apt-get update
  - apt-get install -y -q make gcc
  script:
  - tar xfa out/b-trisquel11/*-*.tar.gz
  - cd $(tar tfa out/b-trisquel11/*-*.tar.gz | head -n1)
  - mkdir b
  - cd b
  - ../configure --enable-gcc-warnings=error
  - make -j$(nproc) -k check V=1 VERBOSE=t

Debian-testing:
  image: debian:testing
  stage: test
  needs: [B-Trisquel11]
  before_script:
  - apt-get update
  - apt-get install -y -q make gcc
  script:
  - tar xfa out/b-trisquel11/*-*.tar.gz
  - cd $(tar tfa out/b-trisquel11/*-*.tar.gz | head -n1)
  - mkdir b
  - cd b
  - ../configure --enable-gcc-warnings=error
  - grep am_cv_func_iconv_summary config.log
  - cd ..
  - apt-get install -y -q autoconf autopoint libtool gtk-doc-tools
  - AUTOPOINT=true autoreconf -fvi
  - ./configure --enable-gcc-warnings=error
  - grep am_cv_func_iconv_summary config.log
  - make -j$(nproc) -k check V=1 VERBOSE=t

Alpine:
  image: alpine:latest
  stage: test
  needs: [B-Trisquel11]
  before_script:
  - echo "ipv6" >> /etc/modules
  - apk update
  - apk add build-base
  variables:
    WERROR_CFLAGS: "-Wno-error=unused-value -Wno-error=format-nonliteral"
  script:
  - tar xfa out/b-trisquel11/*-*.tar.gz
  - cd $(tar tfa out/b-trisquel11/*-*.tar.gz | head -n1)
  - ./configure --enable-gcc-warnings=error
  - make -j$(nproc) -k check V=1 VERBOSE=t

ArchLinux:
  image: archlinux:latest
  stage: test
  needs: [B-Trisquel11]
  before_script:
  - pacman -Syu --noconfirm make gcc diffutils
  script:
  - tar xfa out/b-trisquel11/*-*.tar.gz
  - cd $(tar tfa out/b-trisquel11/*-*.tar.gz | head -n1)
  - mkdir b
  - cd b
  - ../configure --enable-gcc-warnings=error
  - make -j$(nproc) -k check V=1 VERBOSE=t

OracleLinux7:
  image: oraclelinux:7
  stage: test
  needs: [B-Trisquel11]
  before_script:
  - yum -y install make gcc diffutils valgrind libunistring-devel
  script:
  - tar xfz out/b-trisquel11/*-*.tar.gz
  - cd $(tar tfz out/b-trisquel11/*-*.tar.gz | head -n1)
  - ./configure --enable-gcc-warnings=error
  - make -j$(nproc) -k check V=1 VERBOSE=t

AlmaLinux8:
  image: almalinux:8
  stage: test
  needs: [B-Trisquel11]
  before_script:
  - time dnf --enablerepo=powertools -y install make gcc diffutils valgrind libunistring-devel
  script:
  - tar xfa out/b-trisquel11/*-*.tar.gz
  - cd $(tar tfa out/b-trisquel11/*-*.tar.gz | head -n1)
  - ./configure --enable-gcc-warnings=error
  - make -j$(nproc) -k check V=1 VERBOSE=t

RockyLinux9-ppc64:
  rules:
  - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  - if: $LIBIDN2_CI_RUN_PPC64_JOBS
  image: rockylinux:9
  tags: [ ppc64 ]
  stage: test
  needs: [B-Trisquel11]
  before_script:
  - time dnf --enablerepo=crb -y install make gcc diffutils valgrind libunistring-devel
  script:
  - tar xfa out/b-trisquel11/*-*.tar.gz
  - cd $(tar tfa out/b-trisquel11/*-*.tar.gz | head -n1)
  - time ./configure --enable-gcc-warnings=error
  - time make -j$(nproc) check V=1 VERBOSE=t

Ubuntu14.04:
  image: ubuntu:14.04
  stage: test
  needs: [B-Trisquel11]
  before_script:
  - apt-get update -q
  - apt-get install -y -q make gcc
  script:
  - tar xfa out/b-trisquel11/*-*.tar.gz
  - cd $(tar tfa out/b-trisquel11/*-*.tar.gz | head -n1)
  - ./configure --enable-gcc-warnings=error
  - make -j$(nproc) -k check V=1 VERBOSE=t

Trisquel11:
  image: kpengboy/trisquel:11.0
  stage: test
  needs: [B-Trisquel11]
  before_script:
  - apt-get update -q
  - apt-get install -y -q make gcc
  script:
  - tar xfa out/b-trisquel11/*-*.tar.gz
  - cd $(tar tfa out/b-trisquel11/*-*.tar.gz | head -n1)
  - ./configure --enable-gcc-warnings=error
  - make -j$(nproc) -k check V=1 VERBOSE=t

Ubuntu-rolling:
  image: ubuntu:rolling
  stage: test
  needs: [B-Trisquel11]
  before_script:
  - apt-get update -q
  - apt-get install -y -q git make gcc gtk-doc-tools texinfo texlive texlive-plain-generic dblatex
  script:
  - tar xfa out/b-trisquel11/*-*.tar.gz
  - cd $(tar tfa out/b-trisquel11/*-*.tar.gz | head -n1)
  - ./configure --enable-gcc-warnings=error
  - make -j$(nproc) -k check V=1 VERBOSE=t
  - make -j$(nproc) -k distcheck
  # check if essential files are accidentally cleaned
  - make clean
  - make -j$(nproc) -k

armcross:
  image: debian:latest
  stage: test
  needs: [B-Trisquel11]
  before_script:
  - dpkg --add-architecture armel
  - apt-get update -q
  - apt-get install -y -q make gcc-arm-linux-gnueabi libstdc++6:armel
  script:
  - tar xfa out/b-trisquel11/*-*.tar.gz
  - cd $(tar tfa out/b-trisquel11/*-*.tar.gz | head -n1)
  - mkdir b
  - cd b
  - ../configure --host=arm-linux-gnueabi --enable-gcc-warnings=error
  - make -j$(nproc) -k V=1
  - arm-linux-gnueabi-readelf -h lib/.libs/libidn2.so
  - arm-linux-gnueabi-readelf -h src/.libs/idn2
  - make -j$(nproc) -k check VERBOSE=t

Mingw32:
  image: debian:latest
  stage: test
  needs: [B-Trisquel11]
  before_script:
  - dpkg --add-architecture i386
  - apt-get update -q
  - apt-get install -y -q make mingw-w64 wine wine32 libwine libwine:i386 binfmt-support wine-binfmt
  - update-binfmts --enable wine
  variables:
    WERROR_CFLAGS: "-Wno-error=unused-value -Wno-error=format-nonliteral"
  script:
  - tar xfa out/b-trisquel11/*-*.tar.gz
  - cd $(tar tfa out/b-trisquel11/*-*.tar.gz | head -n1)
  - mkdir b
  - cd b
  - ../configure --host=i686-w64-mingw32 CC='i686-w64-mingw32-gcc -static-libgcc' --enable-gcc-warnings=error
  - make -j$(nproc) -k check V=1 VERBOSE=t

Mingw64:
  image: debian:latest
  stage: test
  needs: [B-Trisquel11]
  before_script:
  - dpkg --add-architecture i386
  - apt-get update -q
  - apt-get install -y -q make mingw-w64 wine wine32 wine64 binfmt-support wine-binfmt
  - update-binfmts --enable wine
  variables:
    WERROR_CFLAGS: "-Wno-error=unused-value -Wno-error=format-nonliteral"
  script:
  - tar xfa out/b-trisquel11/*-*.tar.gz
  - cd $(tar tfa out/b-trisquel11/*-*.tar.gz | head -n1)
  - mkdir b
  - cd b
  - ../configure --host=x86_64-w64-mingw32 --enable-gcc-warnings=error
  - make -j$(nproc) -k check V=1 VERBOSE=t

.pages:
  stage: build
  needs: ["B-Fedora39-clang-analyzer"]
  image: $CI_REGISTRY/libidn/build-images:libidn2-Debian12
  before_script:
  - apt-get install -y -q lcov
  script:
  - rm -rf public
  - mkdir -p public
  - mv clang-analyzer/* public/clang-analyzer
  - mv doc/manual public/manual
  - mv doc/reference/html public/reference
  - mv doc/reference/libidn2.pdf public/reference/
  - ./bootstrap --skip-po
  - CFLAGS="-g -O0" ./configure --enable-gtk-doc --enable-code-coverage --disable-gcc-warnings
  - make -j$(nproc) check VERBOSE=t
  - make local-code-coverage-output
  - mv Libidn2-*-coverage public/coverage
  - make clean
  - make
  - make -C fuzz check VERBOSE=t
  - make code-coverage-capture
  - contrib/make-coverage-badge "fuzz-coverage"
  - mv Libidn2-*-coverage public/fuzz-coverage
  - mv badge.svg public/fuzz-coverage/
  artifacts:
    when: on_success
    paths:
      - public

pages:
  extends: .pages
  only:
    - master

pages-test:
  extends: .pages
  except:
    - master
